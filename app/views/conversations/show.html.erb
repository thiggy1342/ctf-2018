<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
<script type="text/javascript" src="http://code.jquery.com/jquery-1.7.1.min.js"></script>

<script>
  var last_updated = Date.now();
  function escapeHtml(text) {
      return text
          .replace(/&/g, "&amp;")
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;")
          .replace(/"/g, "&quot;")
          .replace(/'/g, "&#039;");
  }
  function load_initial_messages(){
      $.ajax({
          url: `<%= conversation_messages_as_json_path(@conversation[:hash_id]) %>`,
          type: "get",
          cache: false
      }).done(function( ret ) {
          ret['messages'].forEach(function(message){
                if(message['from'] == 'Anon'){
                    $("#message-history").append(`<strong style="color:blue">From ${message["from"]} to Me</strong><br>`);
                } else {
                    $("#message-history").append(`<strong style="color:red">From Me to ${message["to"]}</strong><br>`);
                }
                if(ret['display_html?'] == true){
                    $("#message-history").append(message['content']).append("<br>");
                } else {
                    $("#message-history").append(escapeHtml(message['content'])).append("<br>");
                }
          });
      });
  }
  function get_new_messages(){
      $.ajax({
          url: `<%= conversation_messages_as_json_path(@conversation[:hash_id]) %>`,
          type: "get",
          cache: false
      }).done(function( ret ) {
          ret['messages'].forEach(function(message){
              if(Date.parse(message['created_at']) > last_updated){
                  if(message['from'] == 'Anon'){
                      $("#message-history").append(`<strong style="color:blue">From ${message["from"]} to Me</strong><br>`);
                  } else {
                      $("#message-history").append(`<strong style="color:red">From Me to ${message["to"]}</strong><br>`);
                  }
                  if(ret['display_html?'] == true){
                      $("#message-history").append(message['content']).append("<br>");
                  } else {
                      $("#message-history").append(escapeHtml(message['content'])).append("<br>");
                  }
              }
          });
          last_updated = Date.now();
      });
  }
  load_initial_messages();
  setInterval("get_new_messages()", 5000);
  </script>

<div class="container">
  <h1>MysteryRandoChat.io</h1>
  <h2>Conversation with <%= @conversation.user1 %></h2>

  <div class="row">
    <div class="col-lg" id="message-history"></div>
    <div class="col-2">
      <div class="row">
        <%= button_to "Clear Message History", conversation_clear_history_path(@conversation) %>
      </div>
      <div class="row">
        <%= button_to "Enable/Disable Embedded Images", conversation_display_elements_path(@conversation) %>
      </div>
    </div>
  </div>

  <div class="row" style="padding-top: 20px">
    <h3>Send New Message</h3>
  </div>
  <div class="row">
    <%= form_with(model: [ @conversation, @conversation.messages.build ], local: true) do |form| %>
      <p>
        <%= form.hidden_field :to, value: @conversation[:user1] %>
        <%= form.hidden_field :from, value: @conversation[:user2] %>
        <%= form.hidden_field :user_generated, value: true %>
        <%= form.text_area :content , value: params[:content], rows: 10, cols: 100, class: "col-lg-auto",style: "min-width: 100%" %><br>
        <%= form.submit %>
      </p>
    <% end %>
  </div>
  <div class="row">
    <p style="color:red;"><strong>Note: </strong>Due to the extremely secure design of this service, it may take up to a minute for messages to be delivered.</p>
  </div>

</div>
